<Window
    x:Class="Level_Exporter.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Level_Exporter.Views"
    xmlns:converters="clr-namespace:Level_Exporter"
    xmlns:res="clr-namespace:Level_Exporter.Properties"
    xmlns:resources="clr-namespace:Level_Exporter.Resources"
    xmlns:resx ="clr-namespace:Level_Exporter.Resources" 
    xmlns:viewmodels="clr-namespace:Level_Exporter.ViewModels" 
    d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
    Title="{x:Static res:Resources.Title}"
    Width="800"
    Height="450"
    Name="MainWindow"
    x:Uid="MainWindow">

    <Window.Resources>
        <ResourceDictionary>
            <!-- Converts string name of asset to image source -->
            <converters:StringToImageSourceConverter
                x:Key="StringToImageSourceConverter" />

            <Style x:Key="ReadLevelsText" TargetType="{x:Type Button}">
                <Setter Property="Content" 
                        Value="{x:Static resources:WindowStrings.GetLevelsButton}"/>
            </Style>

            <Style x:Key="ComboBoxStyle" TargetType="ComboBoxItem">
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <Style
                x:Key="AppButtonStyle"
                TargetType="{x:Type Button}">
                <Setter
                    Property="Margin"
                    Value="10" />
                <Setter
                    Property="Width"
                    Value="65" />
                <Setter
                    Property="Height"
                    Value="50" />
                <Setter
                    Property="Background"
                    Value="Transparent" />
            </Style>
        </ResourceDictionary>

    </Window.Resources>

    <Grid
        x:Name="MainGrid"
        x:Uid="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel VerticalAlignment="Bottom">
            <!--Button for getting Mastercam Level information -->
            <Button x:Name="GetLevelsButton" 
                    Command="{Binding Path=LevelInfoViewModel.ReadMastercamLevels}" Width="Auto">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" 
                           BasedOn="{StaticResource ReadLevelsText}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=LevelInfoViewModel.IsSyncButton}" Value="false">
                                <Setter Property="Content" 
                                        Value="{x:Static resources:WindowStrings.GetLevelsButton}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=LevelInfoViewModel.IsSyncButton}" Value="true">
                                <Setter Property="Content" 
                                        Value="{x:Static resources:WindowStrings.SyncLevelsButton}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>

        <StackPanel
            x:Uid="TextBlockStackPanel"
            Grid.Row="0" 
            Grid.Column="1"
            HorizontalAlignment="Center" 
            VerticalAlignment="Bottom" 
            Width="Auto" Height="Auto">

            <TextBlock
                Text="{x:Static resx:WindowStrings.CadTypePrompt}"
                FontSize="14"
                Width="300" RenderTransformOrigin="0.493,0.585" Margin="0" />
            <!-- Combobox for Cad format selection-->
            <ComboBox IsReadOnly="True" 
                      IsTextSearchEnabled="False"
                      SelectedValue="{Binding CadFormatSelected, Mode=TwoWay}" ItemContainerStyle="{StaticResource ComboBoxStyle}">
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeDwg}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeDxf}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeEmcam}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeIges}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeIgs}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeMcam}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeSat}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeStep}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeStp}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeStl}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeXb}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeXmttxt}"/>
                <ComboBoxItem Content="{x:Static resources:WindowStrings.CadTypeXt}"/>
            </ComboBox>

            <TextBlock Text="{x:Static resources:WindowStrings.StlResolution}" 
                       FontSize="14" 
                       Margin="0,24,0,0"/>
            <TextBox MaxLength="4"
                     Text="{Binding StlResolution, UpdateSourceTrigger=LostFocus}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTextInput" SourceObject="{Binding ElementName=PreviewTextInputEvent}" x:Name="testfix">
                        <i:InvokeCommandAction Command="{Binding PreviewTextInputCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
            </TextBox>
        </StackPanel>

        <!-- Stack panel for Browse button and destination directory Text box -->
        <StackPanel Grid.Row="1" 
                    Grid.Column="1"
                    VerticalAlignment="Center" 
                    Width="Auto">
            <TextBlock Text="{x:Static resources:WindowStrings.DestinationPrompt}"/>
            <StackPanel Orientation="Vertical" Width="Auto">
                <!-- Text box for destination/output directory -->
                <TextBox Text="{Binding Path=DestinationDirectory, UpdateSourceTrigger=LostFocus}" 
                         IsUndoEnabled="True"
                         ToolTip="{x:Static resources:WindowStrings.BrowseTextFieldToolTip}" 
                         VerticalAlignment="Center" HorizontalAlignment="Stretch" MinWidth="193" MaxWidth="250">
                </TextBox>

                <!-- Browse Button for destination directory -->
                <Button 
                    Content="{x:Static resources:WindowStrings.BrowseButton}"
                    Command="{Binding Path=BrowseCommand}"
                    Width="125"/>
            </StackPanel>
        </StackPanel>

        <!-- Stack panel for Level info grid -->
        <StackPanel DataContext="{Binding LevelInfoViewModel}" 
                    Grid.Row="1" 
                    Grid.Column="0"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Top" Margin="96,0,95,0" >

            <!--Data grid for Level information -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="57*"/>
                    <ColumnDefinition Width="46*"/>
                </Grid.ColumnDefinitions>
                <DataGrid CanUserAddRows="False" 
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding Path=Levels}" 
                          HorizontalScrollBarVisibility="Visible" 
                          VerticalScrollBarVisibility="Visible"
                          Height="Auto" Grid.ColumnSpan="2">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn CanUserSort="False">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <!--Check box for selecting all levels -->
                                    <CheckBox Content="Select"
                                                  IsChecked="{Binding DataContext.IsSelectAll, 
                                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}},
                                                                UpdateSourceTrigger=PropertyChanged}"
                                                  Command="{Binding DataContext.SelectAll, 
                                                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"/>
                                    <!-- Since Datagrid column *header* is not part of UI logic, must use relative source to bump up and get properties datagrid -->
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!-- Checkbox for selecting level for export -->
                                    <CheckBox IsChecked="{
                                        Binding Path=IsSelected, 
                                        UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="#"
                                            IsReadOnly="True"
                                            Binding="{Binding Number}"/>
                        <DataGridTextColumn Header="Name" 
                                            Binding="{Binding Name}"
                                            CanUserSort="False"/>
                        <DataGridTextColumn Header="Entity Count"
                                            IsReadOnly="True"
                                            Binding="{Binding EntityCount}" 
                                            CanUserSort="False"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </StackPanel>

        <!-- Stack panel for ok/close buttons -->
        <StackPanel
            x:Name="ButtonPanel"
            x:Uid="ButtonStackPanel"
            Grid.Row="2" 
            Grid.Column="1"
            Orientation="Horizontal"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom">

            <!-- Ok/Export Button -->
            <Button x:Name="OkButton"
                    x:Uid="OkButton"
                    Style="{StaticResource AppButtonStyle}"
                    Command="{Binding OkCommand}" Width="98">
                <StackPanel HorizontalAlignment="Left">
                    <Image
                        Height="24"
                        Width="24"
                        Source="{Binding OkResource, Converter={StaticResource StringToImageSourceConverter}}" />
                    <TextBlock FontSize="14" 
                               Text="{x:Static resources:WindowStrings.ExportButton}"/>
                </StackPanel>
            </Button>

            <!--Close button -->
            <Button x:Name="CloseButton"
                    x:Uid="CloseButton"
                    Style="{StaticResource AppButtonStyle}"
                    Command="{Binding CloseCommand}"
                    CommandParameter="{Binding ElementName=MainWindow}">
                <Button.Content>
                    <Image
                        Height="24"
                        Width="24"
                        Source="{Binding CancelResource, Converter={StaticResource StringToImageSourceConverter}}" />
                </Button.Content>
            </Button>
        </StackPanel>

    </Grid>
</Window>
